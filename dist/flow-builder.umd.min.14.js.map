{"version":3,"sources":["webpack://flow-builder/./src/components/interaction-designer/block-types/Core_LogBlock.vue?84e4","webpack://flow-builder/./src/store/flow/block-types/Core_LogBlockStore.ts","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_LogBlock.vue?43f4","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_LogBlock.vue?ef38","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_LogBlock.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","_f","block_type","trans","block","attrs","isEditable","_l","flow","ref","languageId","id","language","label","mode","toLowerCase","messageResource","uuid","findOrGenerateStubbedVariantOn","language_id","content_type","modes","_t","staticRenderFns","BLOCK_TYPE","getters","mutations","actions","createWith","rootGetters","commit","dispatch","props","root","blankLogResource","IdGeneratorUuidV4","generate","tag","exits","type","name","semantic_label","config","message","namespaced","flowVuexNamespace","builderVuexNamespace","resourcesByUuid","Getter","components","ResourceEditor","ResourceVariantTextEditor","BlockNameEditor","BlockLabelEditor","BlockSemanticLabelEditor","FirstBlockEditorButton","BlockId","install","component"],"mappings":"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","file":"flow-builder.umd.min.14.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"core-log-block\"},[_c('h3',{staticClass:\"no-room-above\"},[_vm._v(\" \"+_vm._s(_vm._f(\"trans\")('flow-builder.edit-block-type',{block_type: _vm.trans((\"flow-builder.\" + (_vm.block.type)))}))+\" \")]),_c('fieldset',{attrs:{\"disabled\":!_vm.isEditable}},[_c('block-name-editor',{attrs:{\"block\":_vm.block}}),_c('block-label-editor',{attrs:{\"block\":_vm.block}}),_c('block-semantic-label-editor',{attrs:{\"block\":_vm.block}}),_c('div',{staticClass:\"text-only-resource-editor\"},[_c('hr'),_c('h4',[_vm._v(\"Log Message\")]),_vm._l((_vm.flow.languages),function(ref){\nvar languageId = ref.id;\nvar language = ref.label;\nreturn [_c('div',{staticClass:\"block-content-editor-lang\"},[_c('h5',{staticClass:\"badge badge-info\"},[_vm._v(\" \"+_vm._s(_vm._f(\"trans\")(language || 'flow-builder.unknown-language'))+\" \")])]),_vm._l((_vm.flow.supported_modes),function(mode){return [_c('h6',[_vm._v(_vm._s(_vm._f(\"trans\")((\"flow-builder.\" + (mode.toLowerCase()) + \"-content\"))))]),_c('resource-variant-text-editor',{attrs:{\"resource-id\":_vm.messageResource.uuid,\"resource-variant\":_vm.findOrGenerateStubbedVariantOn(\n                                          _vm.messageResource,\n                                          {language_id: languageId, content_type: ['text'], modes: [mode]}),\"mode\":mode,\"enable-autogen-button\":true || _vm.enableAutogenButton}})]})]})],2),_vm._t(\"extras\"),_c('first-block-editor-button',{attrs:{\"flow\":_vm.flow,\"block-id\":_vm.block.uuid}})],2),_c('block-id',{attrs:{\"block\":_vm.block}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { ActionTree, GetterTree, MutationTree } from 'vuex'\nimport { IRootState } from '@/store'\nimport {\n  IBlockExit,\n} from '@floip/flow-runner'\nimport { IdGeneratorUuidV4 } from '@floip/flow-runner/dist/domain/IdGeneratorUuidV4'\nimport { ILogBlock } from '@floip/flow-runner/src/model/block/ILogBlock'\nimport { defaultsDeep } from 'lodash'\nimport { IFlowsState } from '../index'\n\nexport const BLOCK_TYPE = 'Core.Log'\n\nexport const getters: GetterTree<IFlowsState, IRootState> = {}\n\nexport const mutations: MutationTree<IFlowsState> = {\n}\nexport const actions: ActionTree<IFlowsState, IRootState> = {\n\n  async createWith({ rootGetters, commit, dispatch }, { props }: {props: {uuid: string} & Partial<ILogBlock>}) {\n    // todo: do we need to generate this resource here? and do we need overrides??\n    //       (check the other block types as well; I thought the idea was to generate them\n    //       in-flight)\n\n    const blankLogResource = await dispatch('flow/flow_addBlankResource', null, { root: true })\n\n    const exits: IBlockExit[] = [\n      await dispatch('flow/block_createBlockDefaultExitWith', {\n        props: ({\n          uuid: await (new IdGeneratorUuidV4()).generate(),\n          tag: 'Default',\n          label: 'Default',\n        }) as IBlockExit,\n      }, { root: true }),\n    ]\n\n    return defaultsDeep(props, {\n      type: BLOCK_TYPE,\n      name: '',\n      label: '',\n      semantic_label: '',\n      exits,\n      config: {\n        message: blankLogResource.uuid,\n      },\n    })\n  },\n\n}\n\nexport default {\n  namespaced: true,\n  getters,\n  mutations,\n  actions,\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { namespace } from 'vuex-class'\nimport { Component, Prop } from 'vue-property-decorator'\n\nimport { IFlow, IResource } from '@floip/flow-runner'\nimport { ILogBlock } from '@floip/flow-runner/src/model/block/ILogBlock'\n\nimport { findOrGenerateStubbedVariantOn } from '@/store/flow/resource'\nimport LogStore, { BLOCK_TYPE } from '@/store/flow/block-types/Core_LogBlockStore'\nimport { createDefaultBlockTypeInstallerFor } from '@/store/builder'\nimport Lang from '@/lib/filters/lang'\nimport ResourceEditor from '../resource-editors/ResourceEditor.vue'\nimport ResourceVariantTextEditor from '../resource-editors/ResourceVariantTextEditor.vue'\nimport BlockNameEditor from '../block-editors/NameEditor.vue'\nimport BlockLabelEditor from '../block-editors/LabelEditor.vue'\nimport BlockSemanticLabelEditor from '../block-editors/SemanticLabelEditor.vue'\nimport FirstBlockEditorButton from '../flow-editors/FirstBlockEditorButton.vue'\nimport BlockId from '../block-editors/BlockId.vue'\nimport { mixins } from 'vue-class-component'\n\nconst flowVuexNamespace = namespace('flow')\nconst builderVuexNamespace = namespace('builder')\n\n@Component({\n  components: {\n    ResourceEditor,\n    ResourceVariantTextEditor,\n    BlockNameEditor,\n    BlockLabelEditor,\n    BlockSemanticLabelEditor,\n    FirstBlockEditorButton,\n    BlockId,\n  },\n})\nclass Core_LogBlock extends mixins(Lang) {\n    @Prop()readonly block!: ILogBlock\n\n    @Prop()readonly flow!: IFlow\n\n    findOrGenerateStubbedVariantOn = findOrGenerateStubbedVariantOn\n\n    get messageResource(): IResource {\n      return this.resourcesByUuid[this.block.config.message]\n    }\n\n    @flowVuexNamespace.Getter resourcesByUuid!: {[key: string]: IResource}\n\n    @builderVuexNamespace.Getter isEditable !: boolean\n  }\n\nexport default Core_LogBlock\nexport const install = createDefaultBlockTypeInstallerFor(BLOCK_TYPE, LogStore)\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Core_LogBlock.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Core_LogBlock.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Core_LogBlock.vue?vue&type=template&id=0b627726&\"\nimport script from \"./Core_LogBlock.vue?vue&type=script&lang=ts&\"\nexport * from \"./Core_LogBlock.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
{"version":3,"sources":["webpack://flow-builder/./src/components/interaction-designer/block-types/Core_OutputBlock.vue?6788","webpack://flow-builder/./src/store/flow/block-types/Core_OutputBlockStore.ts","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_OutputBlock.vue?042b","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_OutputBlock.vue?afa0","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_OutputBlock.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","_f","block_type","trans","block","attrs","isEditable","scopedSlots","_u","key","fn","ref","isValid","value","on","commitExpressionChange","_t","flow","uuid","staticRenderFns","BLOCK_TYPE","getters","mutations","actions","editOutputExpression","commit","blockId","newConfig","root","createWith","dispatch","props","IdGeneratorUuidV4","generate","tag","label","exits","type","name","semantic_label","config","namespaced","blockVuexNamespace","builderVuexNamespace","Action","Getter","components","ExpressionInput","BlockNameEditor","BlockLabelEditor","BlockSemanticLabelEditor","FirstBlockEditorButton","BlockId","ValidationMessage","install","component"],"mappings":"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","file":"flow-builder.umd.min.14.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"core-output-block\"},[_c('h3',{staticClass:\"no-room-above\"},[_vm._v(\" \"+_vm._s(_vm._f(\"trans\")('flow-builder.edit-block-type',{block_type: _vm.trans((\"flow-builder.\" + (_vm.block.type)))}))+\" \")]),_c('fieldset',{attrs:{\"disabled\":!_vm.isEditable}},[_c('block-name-editor',{attrs:{\"block\":_vm.block}}),_c('block-label-editor',{attrs:{\"block\":_vm.block}}),_c('block-semantic-label-editor',{attrs:{\"block\":_vm.block}}),_c('validation-message',{attrs:{\"message-key\":(\"block/\" + (_vm.block.uuid) + \"/config/value\")},scopedSlots:_vm._u([{key:\"input-control\",fn:function(ref){\nvar isValid = ref.isValid;\nreturn [_c('expression-input',{attrs:{\"label\":_vm._f(\"trans\")('flow-builder.output-expression'),\"placeholder\":_vm._f(\"trans\")('flow-builder.edit-expression'),\"current-expression\":_vm.value,\"valid-state\":isValid},on:{\"commitExpressionChange\":_vm.commitExpressionChange}})]}}])}),_vm._t(\"extras\"),_c('first-block-editor-button',{attrs:{\"flow\":_vm.flow,\"block-id\":_vm.block.uuid}})],2),_c('block-id',{attrs:{\"block\":_vm.block}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {ActionTree, GetterTree, MutationTree} from 'vuex'\nimport {IRootState} from '@/store'\nimport {IBlockExit} from '@floip/flow-runner'\nimport {IdGeneratorUuidV4} from '@floip/flow-runner/dist/domain/IdGeneratorUuidV4'\nimport {IOutputBlock} from '@floip/flow-runner/src/model/block/IOutputBlock'\nimport {defaultsDeep} from 'lodash'\nimport {IFlowsState} from '../index'\n\nexport const BLOCK_TYPE = 'Core.Output'\n\nexport const getters: GetterTree<IFlowsState, IRootState> = {}\n\nexport const mutations: MutationTree<IFlowsState> = {}\n\nexport const actions: ActionTree<IFlowsState, IRootState> = {\n  async editOutputExpression({commit}, {blockId, value}: { blockId: string, value: string }): Promise<string> {\n    commit('flow/block_updateConfig', {blockId, newConfig: {value}}, {root: true})\n    return value\n  },\n  async createWith({dispatch}, {props}: { props: { uuid: string } & Partial<IOutputBlock> }) {\n    const exits: IBlockExit[] = [\n      await dispatch('flow/block_createBlockDefaultExitWith', {\n        props: ({\n          uuid: await (new IdGeneratorUuidV4()).generate(),\n          tag: 'Default',\n          label: 'Default',\n        }) as IBlockExit,\n      }, {root: true}),\n    ]\n\n    return defaultsDeep(props, {\n      type: BLOCK_TYPE,\n      name: '',\n      label: '',\n      semantic_label: '',\n      config: {\n        value: '',\n      },\n      exits,\n    })\n  },\n\n}\n\nexport default {\n  namespaced: true,\n  getters,\n  mutations,\n  actions,\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {namespace} from 'vuex-class'\nimport {Component, Prop} from 'vue-property-decorator'\nimport {IOutputBlock} from '@floip/flow-runner/src/model/block/IOutputBlock'\nimport {IFlow} from '@floip/flow-runner'\nimport OutputStore, {BLOCK_TYPE} from '@/store/flow/block-types/Core_OutputBlockStore'\nimport Lang from '@/lib/filters/lang'\nimport {createDefaultBlockTypeInstallerFor} from '@/store/builder'\nimport {mixins} from 'vue-class-component'\nimport ExpressionInput from '@/components/common/ExpressionInput.vue'\nimport ValidationMessage from '@/components/common/ValidationMessage.vue'\nimport BlockNameEditor from '../block-editors/NameEditor.vue'\nimport BlockLabelEditor from '../block-editors/LabelEditor.vue'\nimport BlockSemanticLabelEditor from '../block-editors/SemanticLabelEditor.vue'\nimport FirstBlockEditorButton from '../flow-editors/FirstBlockEditorButton.vue'\nimport BlockId from '../block-editors/BlockId.vue'\n\nconst blockVuexNamespace = namespace(`flow/${BLOCK_TYPE}`)\nconst builderVuexNamespace = namespace('builder')\n\n@Component({\n  components: {\n    ExpressionInput,\n    BlockNameEditor,\n    BlockLabelEditor,\n    BlockSemanticLabelEditor,\n    FirstBlockEditorButton,\n    BlockId,\n    ValidationMessage,\n  },\n})\nclass Core_OutputBlock extends mixins(Lang) {\n  @Prop() readonly block!: IOutputBlock\n\n  @Prop() readonly flow!: IFlow\n\n  get value(): string {\n    return this.block.config.value || ''\n  }\n\n  @blockVuexNamespace.Action editOutputExpression!: (params: { blockId: string, value: string }) => Promise<string>\n\n  @builderVuexNamespace.Getter isEditable !: boolean\n\n  commitExpressionChange(value: string): Promise<string> {\n    return this.editOutputExpression({blockId: this.block.uuid, value})\n  }\n}\n\nexport default Core_OutputBlock\nexport const install = createDefaultBlockTypeInstallerFor(BLOCK_TYPE, OutputStore)\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Core_OutputBlock.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Core_OutputBlock.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Core_OutputBlock.vue?vue&type=template&id=7752cac3&\"\nimport script from \"./Core_OutputBlock.vue?vue&type=script&lang=ts&\"\nexport * from \"./Core_OutputBlock.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
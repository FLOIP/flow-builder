{"version":3,"sources":["webpack://flow-builder/./src/components/interaction-designer/block-types/Core_LogBlock.vue?e4c6","webpack://flow-builder/./src/store/flow/block-types/Core_LogBlockStore.ts","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_LogBlock.vue?43f4","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_LogBlock.vue?ef38","webpack://flow-builder/./src/components/interaction-designer/block-types/Core_LogBlock.vue"],"names":[],"mappings":"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","file":"flow-builder.umd.15.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"core-log-block\"},[_c('h3',{staticClass:\"no-room-above\"},[_vm._v(\" \"+_vm._s(_vm._f(\"trans\")('flow-builder.edit-block-type',{block_type: _vm.trans((\"flow-builder.\" + (_vm.block.type)))}))+\" \")]),_c('fieldset',{attrs:{\"disabled\":!_vm.isEditable}},[_c('block-name-editor',{attrs:{\"block\":_vm.block}}),_c('block-label-editor',{attrs:{\"block\":_vm.block}}),_c('block-semantic-label-editor',{attrs:{\"block\":_vm.block}}),_c('div',{staticClass:\"text-only-resource-editor\"},[_c('hr'),_c('h4',[_vm._v(\"Log Message\")]),_vm._l((_vm.flow.languages),function(ref){\nvar languageId = ref.id;\nvar language = ref.label;\nreturn [_c('div',{staticClass:\"block-content-editor-lang\"},[_c('h5',{staticClass:\"badge badge-info\"},[_vm._v(\" \"+_vm._s(_vm._f(\"trans\")(language || 'flow-builder.unknown-language'))+\" \")])]),_vm._l((_vm.flow.supported_modes),function(mode){return [_c('h6',[_vm._v(_vm._s(_vm._f(\"trans\")((\"flow-builder.\" + (mode.toLowerCase()) + \"-content\"))))]),_c('resource-variant-text-editor',{attrs:{\"resource-id\":_vm.messageResource.uuid,\"resource-variant\":_vm.findOrGenerateStubbedVariantOn(\n              _vm.messageResource,\n              {language_id: languageId, content_type: ['text'], modes: [mode]}),\"mode\":mode,\"enable-autogen-button\":true || _vm.enableAutogenButton}})]})]})],2),_vm._t(\"extras\"),_c('first-block-editor-button',{attrs:{\"flow\":_vm.flow,\"block-id\":_vm.block.uuid}})],2),_c('block-id',{attrs:{\"block\":_vm.block}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {ActionTree, GetterTree, MutationTree} from 'vuex'\nimport {IRootState} from '@/store'\nimport {IBlockExit} from '@floip/flow-runner'\nimport {IdGeneratorUuidV4} from '@floip/flow-runner/dist/domain/IdGeneratorUuidV4'\nimport {ILogBlock} from '@floip/flow-runner/src/model/block/ILogBlock'\nimport {defaultsDeep} from 'lodash'\nimport {IFlowsState} from '../index'\n\nexport const BLOCK_TYPE = 'Core.Log'\n\nexport const getters: GetterTree<IFlowsState, IRootState> = {}\n\nexport const mutations: MutationTree<IFlowsState> = {}\nexport const actions: ActionTree<IFlowsState, IRootState> = {\n\n  async createWith({dispatch}, {props}: { props: { uuid: string } & Partial<ILogBlock> }) {\n    // todo: do we need to generate this resource here? and do we need overrides??\n    //       (check the other block types as well; I thought the idea was to generate them\n    //       in-flight)\n\n    const blankLogResource = await dispatch('flow/flow_addBlankResource', null, {root: true})\n\n    const exits: IBlockExit[] = [\n      await dispatch('flow/block_createBlockDefaultExitWith', {\n        props: ({\n          uuid: await (new IdGeneratorUuidV4()).generate(),\n          tag: 'Default',\n          label: 'Default',\n        }) as IBlockExit,\n      }, {root: true}),\n    ]\n\n    return defaultsDeep(props, {\n      type: BLOCK_TYPE,\n      name: '',\n      label: '',\n      semantic_label: '',\n      exits,\n      config: {\n        message: blankLogResource.uuid,\n      },\n    })\n  },\n\n}\n\nexport default {\n  namespaced: true,\n  getters,\n  mutations,\n  actions,\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {namespace} from 'vuex-class'\nimport {Component, Prop} from 'vue-property-decorator'\n\nimport {IFlow, IResource} from '@floip/flow-runner'\nimport {ILogBlock} from '@floip/flow-runner/src/model/block/ILogBlock'\n\nimport {findOrGenerateStubbedVariantOn} from '@/store/flow/resource'\nimport LogStore, {BLOCK_TYPE} from '@/store/flow/block-types/Core_LogBlockStore'\nimport {createDefaultBlockTypeInstallerFor} from '@/store/builder'\nimport Lang from '@/lib/filters/lang'\nimport {mixins} from 'vue-class-component'\nimport ResourceEditor from '../resource-editors/ResourceEditor.vue'\nimport ResourceVariantTextEditor from '../resource-editors/ResourceVariantTextEditor.vue'\nimport BlockNameEditor from '../block-editors/NameEditor.vue'\nimport BlockLabelEditor from '../block-editors/LabelEditor.vue'\nimport BlockSemanticLabelEditor from '../block-editors/SemanticLabelEditor.vue'\nimport FirstBlockEditorButton from '../flow-editors/FirstBlockEditorButton.vue'\nimport BlockId from '../block-editors/BlockId.vue'\n\nconst flowVuexNamespace = namespace('flow')\nconst builderVuexNamespace = namespace('builder')\n\n@Component({\n  components: {\n    ResourceEditor,\n    ResourceVariantTextEditor,\n    BlockNameEditor,\n    BlockLabelEditor,\n    BlockSemanticLabelEditor,\n    FirstBlockEditorButton,\n    BlockId,\n  },\n})\nclass Core_LogBlock extends mixins(Lang) {\n  @Prop() readonly block!: ILogBlock\n\n  @Prop() readonly flow!: IFlow\n\n  findOrGenerateStubbedVariantOn = findOrGenerateStubbedVariantOn\n\n  get messageResource(): IResource {\n    return this.resourcesByUuid[this.block.config.message]\n  }\n\n  @flowVuexNamespace.Getter resourcesByUuid!: { [key: string]: IResource }\n\n  @builderVuexNamespace.Getter isEditable !: boolean\n}\n\nexport default Core_LogBlock\nexport const install = createDefaultBlockTypeInstallerFor(BLOCK_TYPE, LogStore)\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Core_LogBlock.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Core_LogBlock.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Core_LogBlock.vue?vue&type=template&id=19beb36f&\"\nimport script from \"./Core_LogBlock.vue?vue&type=script&lang=ts&\"\nexport * from \"./Core_LogBlock.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
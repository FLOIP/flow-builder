{"version":3,"sources":["webpack:///./src/components/interaction-designer/block-types/MobilePrimitives_SelectOneResponseBlock.vue?f3fe","webpack:///./src/components/interaction-designer/block-types/MobilePrimitives_SelectOneResponseBlock.vue?1385","webpack:///./src/components/interaction-designer/block-types/MobilePrimitives_SelectOneResponseBlock.vue?4674","webpack:///./src/components/interaction-designer/block-types/MobilePrimitives_SelectOneResponseBlock.vue","webpack:///./src/store/flow/block-types/MobilePrimitives_SelectOneResponseBlockStore.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","_f","block_type","trans","block","attrs","promptResource","flow","_e","questionPromptResource","choicesPromptResource","_l","Object","keys","inflatedChoices","choiceKey","uuid","staticRenderFns","flowVuexNamespace","blockVuexNamespace","newChoices","editSelectOneResponseBlockChoice","resourcesByUuid","config","prompt","questionPrompt","choicesPrompt","deep","Getter","Action","components","BlockNameEditor","BlockLabelEditor","BlockSemanticLabelEditor","FirstBlockEditorButton","ResourceEditor","BlockId","mixins","lang","install","component","BLOCK_TYPE","getters","state","rootState","rootGetters","currentBlock","choices","reduce","memo","allChoicesHaveContent","every","key","values","twoChoicesBlank","blankNumber","some","mutations","deleteChoiceByKey","choiceKeyToRemove","blockId","sort","index","pushNewChoice","choiceId","newIndex","actions","popFirstEmptyChoice","commit","choiceToRemove","dispatch","activeBlock","parseInt","root","blankResource","props","generate","test","label","exit","newExit","exitLabel","createWith","blankPromptResource","blankQuestionPromptResource","blankChoicesPromptResource","defaultExitProps","tag","errorExitProps","1","type","name","semanticLabel","exits","namespaced"],"mappings":"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","file":"js/chunk-c33ed792.aba1c2c7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h3',{staticClass:\"no-room-above\"},[_vm._v(\" \"+_vm._s(_vm._f(\"trans\")('flow-builder.edit-block-type',{block_type: _vm.trans((\"flow-builder.\" + (_vm.block.type)))}))+\" \")]),_c('block-name-editor',{attrs:{\"block\":_vm.block}}),_c('block-label-editor',{attrs:{\"block\":_vm.block}}),_c('block-semantic-label-editor',{attrs:{\"block\":_vm.block}}),_c('div',{staticClass:\"prompt-resource\"},[(_vm.promptResource)?_c('resource-editor',{attrs:{\"label\":_vm._f(\"trans\")('flow-builder.prompt'),\"resource\":_vm.promptResource,\"block\":_vm.block,\"flow\":_vm.flow}}):_vm._e()],1),_c('div',{staticClass:\"question-prompt-resource\"},[(_vm.questionPromptResource)?_c('resource-editor',{attrs:{\"label\":_vm._f(\"trans\")('flow-builder.question-prompt'),\"resource\":_vm.questionPromptResource,\"block\":_vm.block,\"flow\":_vm.flow}}):_vm._e()],1),_c('div',{staticClass:\"choices-prompt-resource\"},[(_vm.choicesPromptResource)?_c('resource-editor',{attrs:{\"label\":_vm._f(\"trans\")('flow-builder.choices-prompt'),\"resource\":_vm.choicesPromptResource,\"block\":_vm.block,\"flow\":_vm.flow}}):_vm._e()],1),_vm._l((Object.keys(_vm.inflatedChoices)),function(choiceKey){return _c('div',{staticClass:\"form-group form-inline\"},[_c('resource-editor',{attrs:{\"label\":(\"Choice \" + choiceKey),\"resource\":_vm.inflatedChoices[choiceKey],\"block\":_vm.block,\"flow\":_vm.flow}})],1)}),_c('first-block-editor-button',{attrs:{\"flow\":_vm.flow,\"block-id\":_vm.block.uuid}}),_c('block-id',{attrs:{\"block\":_vm.block}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { IFlow } from '@floip/flow-runner'\nimport { ISelectOneResponseBlock } from '@floip/flow-runner/src/model/block/ISelectOneResponseBlock'\nimport {\n  IResourceDefinition,\n} from '@floip/flow-runner/src/domain/IResourceResolver'\nimport Vue from 'vue'\nimport { namespace } from 'vuex-class'\nimport { Component, Prop, Watch } from 'vue-property-decorator'\n\nimport SelectOneStore, { BLOCK_TYPE } from '@/store/flow/block-types/MobilePrimitives_SelectOneResponseBlockStore'\nimport lang from '@/lib/filters/lang'\nimport { createDefaultBlockTypeInstallerFor } from '@/store/builder'\nimport BlockNameEditor from '../block-editors/NameEditor.vue'\nimport BlockLabelEditor from '../block-editors/LabelEditor.vue'\nimport BlockSemanticLabelEditor from '../block-editors/SemanticLabelEditor.vue'\n\nimport FirstBlockEditorButton from '../flow-editors/FirstBlockEditorButton.vue'\nimport ResourceEditor from '../resource-editors/ResourceEditor.vue'\nimport BlockId from '../block-editors/BlockId.vue'\n\nconst flowVuexNamespace = namespace('flow')\nconst blockVuexNamespace = namespace(`flow/${BLOCK_TYPE}`)\n\n  @Component<any>({\n    components: {\n      BlockNameEditor,\n      BlockLabelEditor,\n      BlockSemanticLabelEditor,\n      FirstBlockEditorButton,\n      ResourceEditor,\n      BlockId,\n    },\n    mixins: [lang],\n  })\nexport class MobilePrimitives_SelectOneResponseBlock extends Vue {\n    @Prop()readonly block!: ISelectOneResponseBlock\n\n    @Prop()readonly flow!: IFlow\n\n    get promptResource(): IResourceDefinition {\n      return this.resourcesByUuid[this.block.config.prompt]\n    }\n\n    get questionPromptResource(): IResourceDefinition {\n      return this.resourcesByUuid[this.block.config.questionPrompt || '']\n    }\n\n    get choicesPromptResource(): IResourceDefinition {\n      return this.resourcesByUuid[this.block.config.choicesPrompt || '']\n    }\n\n    @Watch('inflatedChoices', { deep: true })\n    onChoicesChanged(newChoices: object) {\n      this.editSelectOneResponseBlockChoice()\n    }\n\n    @flowVuexNamespace.Getter resourcesByUuid!: {[key: string]: IResourceDefinition}\n\n    @blockVuexNamespace.Getter inflatedChoices!: {[key: string]: IResourceDefinition}\n\n    @blockVuexNamespace.Action editSelectOneResponseBlockChoice!: () => Promise<object>\n}\n\nexport default MobilePrimitives_SelectOneResponseBlock\nexport const install = createDefaultBlockTypeInstallerFor(BLOCK_TYPE, SelectOneStore)\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MobilePrimitives_SelectOneResponseBlock.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MobilePrimitives_SelectOneResponseBlock.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MobilePrimitives_SelectOneResponseBlock.vue?vue&type=template&id=a480af60&\"\nimport script from \"./MobilePrimitives_SelectOneResponseBlock.vue?vue&type=script&lang=ts&\"\nexport * from \"./MobilePrimitives_SelectOneResponseBlock.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { ActionTree, GetterTree, MutationTree } from 'vuex'\nimport { IRootState } from '@/store'\nimport {\n  IBlockExitTestRequired,\n  IBlockExit,\n  IFlow,\n  IContext,\n  SupportedContentType,\n  findBlockOnActiveFlowWith,\n  IResourceDefinitionContentTypeSpecific,\n} from '@floip/flow-runner'\nimport { IdGeneratorUuidV4 } from '@floip/flow-runner/dist/domain/IdGeneratorUuidV4'\nimport { ISelectOneResponseBlock } from '@floip/flow-runner/dist/model/block/ISelectOneResponseBlock'\nimport {\n  IResourceDefinition,\n} from '@floip/flow-runner/src/domain/IResourceResolver'\nimport Vue from 'vue'\nimport { defaults, find, max } from 'lodash'\nimport { IResourceDefinitionVariantOverModesFilter } from '../resource'\nimport { IFlowsState } from '../index'\n\nimport { someItemsHaveValue, allItemsHaveValue, twoItemsBlank } from '../utils/listBuilder'\n\nexport const BLOCK_TYPE = 'MobilePrimitives\\\\SelectOneResponse'\n\nexport const getters: GetterTree<IFlowsState, IRootState> = {\n  inflatedChoices: (state, getters, rootState, rootGetters): object => {\n    const currentBlock = rootGetters['builder/activeBlock']\n    const choices: {[key: string]: IResourceDefinition} = {}\n    return Object.keys(currentBlock.config.choices).reduce((memo, choiceKey): {[key: string]: IResourceDefinition} => {\n      memo[choiceKey] = rootGetters['flow/resourcesByUuid'][currentBlock.config.choices[choiceKey]]\n      return memo\n    }, choices)\n  },\n  allChoicesHaveContent: (state, getters): boolean => Object.keys(getters.inflatedChoices).every((key: string) => someItemsHaveValue(getters.inflatedChoices[key].values, 'value')),\n  twoChoicesBlank: (state, getters, rootState, rootGetters): boolean => {\n    let blankNumber = 0\n    return Object.keys(getters.inflatedChoices).some((key: string) => {\n      if (!someItemsHaveValue(getters.inflatedChoices[key].values, 'value')) {\n        blankNumber += 1\n      }\n\n      if (blankNumber > 1) {\n        return true\n      }\n\n      return false\n    })\n  },\n\n}\n\nexport const mutations: MutationTree<IFlowsState> = {\n  deleteChoiceByKey(state, { choiceKeyToRemove, blockId }) {\n    // TODO - this shouldn't be necessary\n    // @ts-ignore - TS2339: Property 'flow' does not exist on type\n    const block: ISelectOneResponseBlock = findBlockOnActiveFlowWith(blockId, this.state.flow as unknown as IContext) as ISelectOneResponseBlock\n    delete block.config.choices[choiceKeyToRemove]\n    const choices: {[key: string]: string} = {}\n    // rekey\n    block.config.choices = Object.keys(block.config.choices).sort().reduce((choices, choiceKey: string, index: number) => {\n      choices[index + 1] = block.config.choices[choiceKey]\n      return choices\n    }, choices)\n  },\n  pushNewChoice(state, { choiceId, blockId, newIndex }) {\n    // TODO - this shouldn't be necessary\n    // @ts-ignore - TS2339: Property 'flow' does not exist on type\n    const block: ISelectOneResponseBlock = findBlockOnActiveFlowWith(blockId, this.state.flow as unknown as IContext) as ISelectOneResponseBlock\n    block.config.choices[newIndex] = choiceId\n  },\n}\n\nexport const actions: ActionTree<IFlowsState, IRootState> = {\n  async popFirstEmptyChoice({ commit, rootGetters, getters }) {\n    const choiceToRemove = find(Object.keys(getters.inflatedChoices), (key: string) => !someItemsHaveValue(getters.inflatedChoices[key].values, 'value'))\n    if (choiceToRemove) {\n      commit('deleteChoiceByKey', { choiceKeyToRemove: choiceToRemove, blockId: rootGetters['builder/activeBlock'].uuid })\n      return rootGetters['builder/activeBlock'].config.choices[choiceToRemove]\n    }\n    return null\n  },\n  async editSelectOneResponseBlockChoice({\n    commit, dispatch, getters, rootGetters,\n  }) {\n    const activeBlock = rootGetters['builder/activeBlock']\n    if (getters.allChoicesHaveContent) {\n      const newIndex = parseInt(max(Object.keys(activeBlock.config.choices)) || '0') + 1\n      const blankResource = await dispatch('flow/flow_addBlankResourceForEnabledModesAndLangs', null, { root: true })\n      // due to a race condition we may have already pushed something\n      if (!activeBlock.config.choices[newIndex]) {\n        commit('pushNewChoice', { choiceId: blankResource.uuid, blockId: activeBlock.uuid, newIndex })\n        const exit: IBlockExitTestRequired = await dispatch('flow/block_createBlockExitWith', {\n          props: ({\n            uuid: (new IdGeneratorUuidV4()).generate(),\n            test: `block.value = ${newIndex - 1}`,\n            label: blankResource.uuid,\n          }) as IBlockExitTestRequired,\n        }, { root: true })\n        commit('flow/block_pushNewExit', { blockId: activeBlock.uuid, newExit: exit }, { root: true })\n      }\n    } else if (getters.twoChoicesBlank) {\n      const exitLabel = await dispatch('popFirstEmptyChoice', { blockId: activeBlock.uuid })\n      if (exitLabel) {\n        commit('flow/block_popExitsByLabel', { blockId: activeBlock.uuid, exitLabel }, { root: true })\n      }\n    }\n    return activeBlock.config.choices\n  },\n\n  // todo: in the flow-spec, there's mention that we can configure to swap between exit-per-choice and a default exit\n  //       but, it doesn't seem to mention how this is configured\n  async createWith({ state, commit, dispatch }, { props }: {props: {uuid: string} & Partial<ISelectOneResponseBlock>}) {\n    const blankResource = await dispatch('flow/flow_addBlankResourceForEnabledModesAndLangs', null, { root: true })\n    const blankPromptResource = await dispatch('flow/flow_addBlankResourceForEnabledModesAndLangs', null, { root: true })\n    const blankQuestionPromptResource = await dispatch('flow/flow_addBlankResourceForEnabledModesAndLangs', null, { root: true })\n    const blankChoicesPromptResource = await dispatch('flow/flow_addBlankResourceForEnabledModesAndLangs', null, { root: true })\n\n    const defaultExitProps: Partial<IBlockExit> = {\n      uuid: (new IdGeneratorUuidV4()).generate(),\n      tag: 'Default',\n      label: 'Default',\n    }\n\n    const errorExitProps: Partial<IBlockExit> = {\n      uuid: (new IdGeneratorUuidV4()).generate(),\n      tag: 'Error',\n      label: 'Error',\n    }\n\n    return defaults(props, {\n      type: BLOCK_TYPE,\n      name: '',\n      label: '',\n      semanticLabel: '',\n      exits: [\n        await dispatch('flow/block_createBlockDefaultExitWith', { props: defaultExitProps }, { root: true }),\n        await dispatch('flow/block_createBlockExitWith', { props: errorExitProps }, { root: true }),\n      ],\n      config: {\n        prompt: blankPromptResource.uuid,\n        questionPrompt: blankQuestionPromptResource.uuid,\n        choicesPrompt: blankChoicesPromptResource.uuid,\n        choices: { 1: blankResource.uuid },\n      },\n    })\n  }\n  ,\n\n}\n\nexport default {\n  namespaced: true,\n  getters,\n  mutations,\n  actions,\n}\n"],"sourceRoot":""}